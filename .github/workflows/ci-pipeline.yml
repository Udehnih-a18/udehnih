name: CI Pipeline

on:
  push:
    branches: ["**"]
  pull_request:
    branches: [main]

jobs:
  build-and-analyze:
    name: Build and Analyze (${{ github.ref_name }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Grant permission to gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-cache-${{ runner.os }}
          restore-keys: gradle-cache-${{ runner.os }}

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build + Sonar + Jacoco
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew build sonar --info

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build-and-analyze
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - run: chmod +x gradlew

      - name: Inject PostgreSQL config for test
        run: |
          mkdir -p src/test/resources
          echo "spring.datasource.url=jdbc:postgresql://${{ secrets.DB_HOST }}/${{ secrets.DB_NAME }}?sslmode=require" > src/test/resources/application.properties
          echo "spring.datasource.username=${{ secrets.DB_USERNAME }}" >> src/test/resources/application.properties
          echo "spring.datasource.password=${{ secrets.DB_PASSWORD }}" >> src/test/resources/application.properties
          echo "spring.datasource.driver-class-name=org.postgresql.Driver" >> src/test/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> src/test/resources/application.properties
          echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect" >> src/test/resources/application.properties

      - run: ./gradlew test

  dependencies:
    name: Submit Dependencies
    runs-on: ubuntu-latest
    needs: [build-and-analyze, test]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
